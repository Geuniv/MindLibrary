<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- JAVA와 연결할 Mapper 파일 설정 -->
<mapper namespace="kopo.poly.persistance.mapper.IBoardMapper">

    <resultMap id="boardResult" type="java.util.HashMap">
        <id column="BOARD_SEQ" property="boardSeq"/>
        <result column="BOARD_SEQ" property="boardSeq"/>
        <result column="NOTIFICATION" property="notification"/>
        <result column="USER_ID" property="userId"/>
        <result column="BOARD_TITLE" property="boardTitle"/>
        <result column="BOARD_CONTENT" property="boardContent"/>
        <result column="BOARD_VIEWS" property="boardViews"/>
        <result column="BOARD_REG_ID" property="boardRegId"/>
        <result column="BOARD_REG_DT" property="boardRegDt"/>
        <result column="USER_NICKNAME" property="userNickname"/>
    </resultMap>

    <!-- 커뮤니티 리스트 쿼리 -->
    <select id="getBoardList" resultMap="boardResult">
        SELECT B.BOARD_SEQ, B.BOARD_TITLE, B.BOARD_VIEWS, B.USER_ID, U.USER_NICKNAME,
               DATE_FORMAT(B.BOARD_REG_DT, '%Y/%m/%d %H:%i:%s') AS BOARD_REG_DT
        FROM MIND_BOARD B, USER_INFO U
        WHERE B.USER_ID = U.USER_ID
        ORDER BY B.BOARD_REG_DT DESC
    </select>

    <!-- 커뮤니티 등록 쿼리 -->
    <insert id="insertBoardInfo" parameterType="BoardDTO">
        INSERT INTO MIND_BOARD
        (
            BOARD_SEQ, NOTIFICATION, BOARD_TITLE, BOARD_CONTENT, USER_ID, BOARD_VIEWS, BOARD_LIKE,
            BOARD_REG_ID, BOARD_REG_DT, BOARD_CHG_ID, BOARD_CHG_DT
        )
        VALUES(
                      (SELECT COALESCE(MAX(A.BOARD_SEQ),0)+1 FROM MIND_BOARD A),
                      #{notification}, #{boardTitle}, #{boardContent}, #{userId}, 0, 0, #{userId}, NOW(), #{userId}, NOW()
              )
    </insert>

    <!-- 게시판 상세보기 쿼리 -->
    <select id="getBoardInfo" resultMap="boardResult">
        SELECT B.BOARD_SEQ, B.BOARD_TITLE, B.BOARD_VIEWS, B.USER_ID, U.USER_NICKNAME,
               B.BOARD_CONTENT, DATE_FORMAT(B.BOARD_REG_DT, '%y-%m-%d') AS BOARD_REG_DT
        FROM MIND_BOARD B
                 JOIN USER_INFO U ON B.USER_ID = U.USER_ID
        WHERE B.BOARD_SEQ = #{boardSeq}
    </select>


    <!-- 조회수 증가 쿼리 -->
    <update id="updateBoardReadCnt" parameterType="BoardDTO">
        UPDATE MIND_BOARD SET
            BOARD_VIEWS = BOARD_VIEWS + 1
        WHERE
            BOARD_SEQ = #{boardSeq}
    </update>

    <!-- 커뮤니티 수정 쿼리 -->
    <update id="updateBoardInfo" parameterType="BoardDTO">
        UPDATE MIND_BOARD SET
                             BOARD_TITLE = #{boardTitle},
                             BOARD_CONTENT = #{boardContent},
                             BOARD_CHG_ID = #{userId},
                             BOARD_CHG_DT = NOW()
        WHERE
            BOARD_SEQ = #{boardSeq}
    </update>

    <!-- 커뮤니티 삭제 쿼리 -->
    <delete id="deleteBoardInfo" parameterType="BoardDTO">
        DELETE FROM MIND_BOARD
        WHERE BOARD_SEQ = #{boardSeq}
    </delete>

    <!-- 회원 탈퇴 -->
    <delete id="deleteUserInfo" parameterType="UserInfoDTO">
        DELETE FROM MIND_BOARD
        WHERE USER_ID = #{userId};
    </delete>

<!--    &lt;!&ndash; 좋아요 정보 삽입 쿼리 &ndash;&gt;-->
<!--    <insert id="insertLike" parameterType="LikeDTO">-->
<!--        INSERT INTO LIKE-->
<!--        VALUES (#{userId}, #{boardSeq})-->
<!--    </insert>-->

<!--    &lt;!&ndash; 좋아요 정보 삭제 쿼리 &ndash;&gt;-->
<!--    <delete id="deleteLike" parameterType="LikeDTO">-->
<!--        IN FROM LIKE-->
<!--        WHERE BOARD_SEQ = #{boardSeq}-->
<!--        AND   USER_ID = #{userId}-->
<!--    </delete>-->

</mapper>